{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/Build/Classes/Person.ts","webpack:///./src/app/Services/proxy.service.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","﻿export class Person implements ProxyGeneratorNgDemoPage.Models.IPerson {\r\n    constructor(public Id: number, public Name: string, public Passwort: string, public IsAktiv: boolean, public CounterValues: number[]) {  }\r\n}","//Warning this file was dynamicly created.\r\n//Please don't change any code it will be overwritten next time the template is executed.\r\n//Created on 03.01.2019 time 13:11 from jrenatus.\r\n\r\n  import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\n@Injectable()\r\nexport class Proxyservice { \r\n\r\nconstructor(private http: HttpClient) {  }\r\n\r\n      public addFileToServer(datei: any,detailId: number) : Observable<ProxyGeneratorNgDemoPage.Models.IPerson> { \r\n     var formData = new FormData(); \r\n formData.append('datei', datei); \r\n       return this.http.post('Proxy/AddFileToServer'+ '?detailId='+detailId,formData) as Observable<ProxyGeneratorNgDemoPage.Models.IPerson>;\r\n     } \r\n\r\n    public addFileToServerNoReturnType(datei: any,detailId: number) : void  { \r\n  var formData = new FormData(); \r\n formData.append('datei', datei); \r\n      this.http.post('Proxy/AddFileToServerNoReturnType'+ '?detailId='+detailId,formData).subscribe(res => res); \r\n     } \r\n\r\n    public getDownloadPerson(personId: number) : void  { \r\n        window.location.href = 'Proxy/GetDownloadPerson'+ '?personId='+personId; \r\n    } \r\n\r\n    public getDownloadCompany(companyId: number) : void  { \r\n        window.location.href = 'Proxy/GetDownloadCompany'+ '?companyId='+companyId; \r\n    } \r\n\r\n    public getDownloadSimple(companyId: number,name: string) : void  { \r\n        window.location.href = 'Proxy/GetDownloadSimple'+ '?companyId='+companyId+'&name='+encodeURIComponent(name); \r\n    } \r\n\r\n    public getDownloadNoParams() : void  { \r\n        window.location.href = 'Proxy/GetDownloadNoParams'; \r\n    } \r\n\r\n     public manySimpleParams(page: number,size: number,sortedCol: number,desc: number,smCompany: string,smCustomerNumber: number,smEmail: string,smLastname: string,portal: number,count: number) : Observable<ProxyGeneratorNgDemoPage.Models.IPerson> { \r\n            return this.http.get('Proxy/ManySimpleParams'+ '?page='+page+'&size='+size+'&sortedCol='+sortedCol+'&desc='+desc+'&smCompany='+encodeURIComponent(smCompany)+'&smCustomerNumber='+smCustomerNumber+'&smEmail='+encodeURIComponent(smEmail)+'&smLastname='+encodeURIComponent(smLastname)+'&portal='+portal+'&count='+count) as Observable<ProxyGeneratorNgDemoPage.Models.IPerson>;\r\n     } \r\n\r\n     public addAges(ages: number[]) : Observable<number[]> { \r\n            return this.http.post('Proxy/AddAges',ages) as Observable<number[]>;\r\n     } \r\n\r\n     public addTsEntryOnly(person: ProxyGeneratorNgDemoPage.Models.IPerson) : Observable<ProxyGeneratorNgDemoPage.Models.IPerson> { \r\n            return this.http.post('Proxy/AddTsEntryOnly',person) as Observable<ProxyGeneratorNgDemoPage.Models.IPerson>;\r\n     } \r\n\r\n     public addTsEntryAndName(person: ProxyGeneratorNgDemoPage.Models.IPerson,name: string) : Observable<ProxyGeneratorNgDemoPage.Models.IAuto> { \r\n            return this.http.post('Proxy/AddTsEntryAndName'+ '?name='+encodeURIComponent(name),person) as Observable<ProxyGeneratorNgDemoPage.Models.IAuto>;\r\n     } \r\n\r\n     public addTsEntryAndParams(person: ProxyGeneratorNgDemoPage.Models.IPerson,name: string,vorname: string) : Observable<ProxyGeneratorNgDemoPage.Models.IAuto> { \r\n            return this.http.post('Proxy/AddTsEntryAndParams'+ '?name='+encodeURIComponent(name)+'&vorname='+encodeURIComponent(vorname),person) as Observable<ProxyGeneratorNgDemoPage.Models.IAuto>;\r\n     } \r\n\r\n     public loadTsCallById(id: number) : Observable<ProxyGeneratorNgDemoPage.Models.IPerson> { \r\n            return this.http.get('Proxy/LoadTsCallById' + '/' + id) as Observable<ProxyGeneratorNgDemoPage.Models.IPerson>;\r\n     } \r\n\r\n     public loadTsCallByParams(name: string,vorname: string,alter: number) : Observable<ProxyGeneratorNgDemoPage.Models.IPerson> { \r\n            return this.http.get('Proxy/LoadTsCallByParams'+ '?name='+encodeURIComponent(name)+'&vorname='+encodeURIComponent(vorname)+'&alter='+alter) as Observable<ProxyGeneratorNgDemoPage.Models.IPerson>;\r\n     } \r\n\r\n     public loadTsCallByParamsAndId(name: string,vorname: string,alter: number,id: number) : Observable<ProxyGeneratorNgDemoPage.Models.IAuto> { \r\n            return this.http.get('Proxy/LoadTsCallByParamsAndId' + '/' + id+ '?name='+encodeURIComponent(name)+'&vorname='+encodeURIComponent(vorname)+'&alter='+alter) as Observable<ProxyGeneratorNgDemoPage.Models.IAuto>;\r\n     } \r\n\r\n     public loadTsCallByParamsWithEnum(name: string,vorname: string,alter: number,access: ProxyGeneratorNgDemoPage.Models.ClientAccess) : Observable<ProxyGeneratorNgDemoPage.Models.IAuto> { \r\n            return this.http.get('Proxy/LoadTsCallByParamsWithEnum'+ '?name='+encodeURIComponent(name)+'&vorname='+encodeURIComponent(vorname)+'&alter='+alter+'&access='+access) as Observable<ProxyGeneratorNgDemoPage.Models.IAuto>;\r\n     } \r\n\r\n     public loadAllAutosListe(name: string) : Observable<ProxyGeneratorNgDemoPage.Models.IAuto[]> { \r\n            return this.http.get('Proxy/LoadAllAutosListe'+ '?name='+encodeURIComponent(name)) as Observable<ProxyGeneratorNgDemoPage.Models.IAuto[]>;\r\n     } \r\n\r\n     public loadAllAutosArray(name: string) : Observable<ProxyGeneratorNgDemoPage.Models.IAuto[]> { \r\n            return this.http.get('Proxy/LoadAllAutosArray'+ '?name='+encodeURIComponent(name)) as Observable<ProxyGeneratorNgDemoPage.Models.IAuto[]>;\r\n     } \r\n\r\n     public clearTsCall() : Observable<ProxyGeneratorNgDemoPage.Models.IPerson> { \r\n            return this.http.get('Proxy/ClearTsCall') as Observable<ProxyGeneratorNgDemoPage.Models.IPerson>;\r\n     } \r\n\r\n    public voidTsReturnType(name: string) : void  { \r\n        this.http.get('Proxy/VoidTsReturnType'+ '?name='+encodeURIComponent(name)).subscribe(res => res); \r\n     } \r\n\r\n     public stringTsReturnType(name: string) : Observable<string> { \r\n            return this.http.get('Proxy/StringTsReturnType'+ '?name='+encodeURIComponent(name)) as Observable<string>;\r\n     } \r\n\r\n     public integerTsReturnType(age: number) : Observable<number> { \r\n            return this.http.get('Proxy/IntegerTsReturnType'+ '?age='+age) as Observable<number>;\r\n     } \r\n\r\n     public dateTsReturnType(name: string) : Observable<any> { \r\n            return this.http.get('Proxy/DateTsReturnType'+ '?name='+encodeURIComponent(name)) as Observable<any>;\r\n     } \r\n\r\n     public boolTsReturnType(boolValue: boolean) : Observable<boolean> { \r\n            return this.http.get('Proxy/BoolTsReturnType'+ '?boolValue='+boolValue) as Observable<boolean>;\r\n     } \r\n\r\n     public errorStringReturnType(boolValue: boolean) : Observable<string> { \r\n            return this.http.get('Proxy/ErrorStringReturnType'+ '?boolValue='+boolValue) as Observable<string>;\r\n     } \r\n\r\n\r\n }\r\n\r\n","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div class=\\\"container body-content\\\" style=\\\"margin-top: 25px;\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n            <h3>\\r\\n                Angular 2 Proxy Calls\\r\\n            </h3>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n            <hr />\\r\\n        </div>\\r\\n    </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-3 col-md-offset-3\\\">\\r\\n      <button (click)=\\\"startTypeScriptServiceCalls()\\\" class=\\\"btn btn-primary btn-block\\\">Test TypeScript Service Calls</button>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <br />\\r\\n      <p class=\\\"text-center\\\">\\r\\n        <strong>Please open the Chrome developer Console to see the service Calls and returned Objects.</strong>\\r\\n      </p>\\r\\n    </div>\\r\\n  </div>\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n            <hr />\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n            <h3>Datei Upload Tests f�r Angular 2</h3>\\r\\n            <p>The IIS tries to store the uploaded files in the diretory: \\\"C:\\\\Temp\\\\\\\"</p>\\r\\n            <br />\\r\\n            <br />\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n            <input #fileInput type=\\\"file\\\" class=\\\"form-control input-sm\\\" />\\r\\n        </div>\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n            <a (click)=\\\"startFileUploadTypeScript()\\\" class=\\\"btn btn-sm btn-primary btn-block\\\">Test FileUpload TypeScript</a>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-12\\\"><hr /></div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-4\\\">\\r\\n            <a (click)=\\\"startFileDownloadCompanyTypeScript()\\\" class=\\\"btn btn-sm btn-primary btn-block\\\">Test FileDownload Company TypeScript</a>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-4\\\">\\r\\n            <a (click)=\\\"startFileDownloadPersonTypeScript()\\\" class=\\\"btn btn-sm btn-primary btn-block\\\">Test FileDownload Person TypeScript</a>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-4\\\">\\r\\n            <a (click)=\\\"startFileDownloadNoParamsTypeScript()\\\" class=\\\"btn btn-sm btn-primary btn-block\\\">Test FileDownload NoParams TypeScript</a>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\n\\n\"","import { Component, ViewChild } from '@angular/core';\r\nimport { Proxyservice } from \"./Services/proxy.service\"\r\nimport { Person } from \"./Build/Classes/Person\";\r\nimport { Company } from \"./Build/Classes/Company\";\r\nimport { Auto } from \"./Build/Classes/Auto\";\r\n\r\n@Component({\r\n  selector: 'angular-2-calls',\r\n  templateUrl: 'app.component.html',\r\n  providers: [Proxyservice]\r\n})\r\nexport class AppComponent {\r\n  public name: string = \"TEST\";\r\n\r\n  constructor(public proxyService: Proxyservice) {\r\n    //Im Konstruktor einfach per DI einen Service injecten, dieser muss in Providers bekannt gemacht werden\r\n  }\r\n\r\n  @ViewChild(\"fileInput\") fileInput;\r\n  public startFileUploadTypeScript(): void {\r\n    //File Upload\r\n    //https://devblog.dymel.pl/2016/09/02/upload-file-image-angular2-aspnetcore/\r\n\r\n    let fi = this.fileInput.nativeElement;\r\n    if (fi.files && fi.files[0]) {\r\n      let fileToUpload = fi.files[0];\r\n      this.proxyService.addFileToServer(fileToUpload, 12).subscribe(_ => {\r\n        console.log(_);\r\n      });\r\n    }\r\n  }\r\n\r\n  public startFileDownloadCompanyTypeScript() {\r\n    this.proxyService.getDownloadCompany(1337);\r\n  }\r\n\r\n  public startFileDownloadPersonTypeScript(): void {\r\n    this.proxyService.getDownloadPerson(7331);\r\n  }\r\n\r\n  public startFileDownloadNoParamsTypeScript(): void {\r\n    this.proxyService.getDownloadNoParams();\r\n  }\r\n\r\n  public startTypeScriptServiceCalls() {\r\n    var ages: number[] = [1, 2, 3, 4, 5, 66];\r\n    var person: ProxyGeneratorNgDemoPage.Models.IPerson = new Person(1337, \"Squad\", \"Wuschel\", true, ages);\r\n\r\n    console.clear();\r\n    console.log(\"Some TypeScript Angular Service Calls: \\r\\n\");\r\n\r\n    this.proxyService.addAges(ages).subscribe(result => {\r\n      console.log(\"\\r\\nSuccess TypeScript Service Call 'addAges' Result: \");\r\n      console.log(result);\r\n      this.proxyService.addAges(result);\r\n    });\r\n\r\n    this.proxyService.addTsEntryAndName(person, \"Johannes\").subscribe(result => {\r\n      console.log(\"\\r\\nSuccess TypeScript Service Call 'addTsEntryAndName' Result: \");\r\n      console.log(result);\r\n    });\r\n\r\n    this.proxyService.manySimpleParams(12, 345, 1, 1, \"test\", 12, \"squad@web.de\", \"Squad\", 12, 32).subscribe(result => {\r\n      console.log(\"\\r\\nSuccess TypeScript Service Call 'manySimpleParams' Result: \");\r\n      console.log(result);\r\n    });\r\n\r\n    this.proxyService.addTsEntryAndParams(person, \"Squad\", \"Wuschel\").subscribe(result => {\r\n      console.log(\"\\r\\nSuccess TypeScript Service Call 'addTsEntryAndParams' Result: \");\r\n      console.log(result);\r\n    });\r\n\r\n    this.proxyService.addTsEntryOnly(person).subscribe(result => {\r\n      console.log(\"\\r\\nSuccess TypeScript Service Call 'addTsEntryOnly' Result: \");\r\n      console.log(result);\r\n    });\r\n\r\n    this.proxyService.boolTsReturnType(true).subscribe(result => {\r\n      console.log(\"\\r\\nSuccess TypeScript Service Call 'boolTsReturnType' Result: \");\r\n      console.log(result);\r\n    });\r\n\r\n    this.proxyService.clearTsCall().subscribe(result => {\r\n      console.log(\"\\r\\nSuccess TypeScript Service Call 'clearTsCall' Result: \");\r\n      console.log(result);\r\n    });\r\n\r\n    this.proxyService.dateTsReturnType(\"SquadWuschel\").subscribe(result => {\r\n      console.log(\"\\r\\nSuccess TypeScript Service Call 'dateTsReturnType' Result: \");\r\n      console.log(result);\r\n    });\r\n\r\n    this.proxyService.integerTsReturnType(1337).subscribe(result => {\r\n      console.log(\"\\r\\nSuccess TypeScript Service Call 'integerTsReturnType' Result: \");\r\n      console.log(result);\r\n    });\r\n\r\n    this.proxyService.loadAllAutosArray(\"SquadWuschel\").subscribe(result => {\r\n      console.log(\"\\r\\nSuccess TypeScript Service Call 'loadAllAutosArray' Result: \");\r\n      console.log(result);\r\n    });\r\n\r\n    this.proxyService.loadAllAutosListe(\"SquadWuschel\").subscribe(result => {\r\n      console.log(\"\\r\\nSuccess TypeScript Service Call 'loadAllAutosListe' Result: \");\r\n      console.log(result);\r\n    });\r\n\r\n    this.proxyService.loadTsCallById(16667).subscribe(result => {\r\n      console.log(\"\\r\\nSuccess TypeScript Service Call 'loadTsCallById' Result: \");\r\n      console.log(result);\r\n    });\r\n\r\n    this.proxyService.loadTsCallByParams(\"Squad\", \"Wuschel\", 33).subscribe(result => {\r\n      console.log(\"\\r\\nSuccess TypeScript Service Call 'loadTsCallByParams' Result: \");\r\n      console.log(result);\r\n    });\r\n\r\n    this.proxyService.loadTsCallByParamsAndId(\"Squad\", \"Wuschel\", 33, 1337).subscribe(result => {\r\n      console.log(\"\\r\\nSuccess TypeScript Service Call 'loadTsCallByParamsAndId' Result: \");\r\n      console.log(result);\r\n    });\r\n\r\n    this.proxyService.voidTsReturnType(\"test\");\r\n\r\n    this.proxyService.loadTsCallByParamsWithEnum(\"Squad\", \"Wuschel\", 33, ProxyGeneratorNgDemoPage.Models.ClientAccess.Admin).subscribe(result => {\r\n      console.log(\"\\r\\nSuccess TypeScript Service Call 'loadTsCallByParamsAndId' Result: \");\r\n      console.log(result);\r\n    });\r\n\r\n    this.proxyService.errorStringReturnType(true).subscribe(result => {\r\n      console.log(\"\\r\\nSuccess TypeScript Service Call 'errorStringReturnType' Result: \");\r\n      console.log(result);\r\n    }, errorResult => {\r\n      //Only gets Called if the ErrorResponse is active and returns only the errorResult and not only the Data.\r\n      console.log(\"\\r\\nError TypeScript Service Call 'errorStringReturnType' Result: \");\r\n      console.log(errorResult);\r\n    });\r\n  }\r\n}","import { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}